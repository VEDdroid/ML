# -*- coding: utf-8 -*-
"""K-Means Clustering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Cn7LlYJ8biaczi-D8UkKQ1pXcOLqXnKM
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn import metrics
from sklearn.cluster import KMeans

df = pd.read_csv("/content/sales_data_sample.csv", encoding = "latin1")
print(df)

df.shape

df.columns

df.info()

X = df.iloc[:, [1,4]].values

"""Elbow Method"""

wcss_list= []
for i in range(1,11):
  kmeans = KMeans(n_clusters=i, init="k-means++", random_state=42)
  kmeans.fit(X)
  wcss_list.append(kmeans.inertia_)

plt.plot(range(1,11), wcss_list)
plt.title("Elbow Method Graph")
plt.xlabel("Number of Clusters(k)")
plt.ylabel("wcss_list")
plt.show()

"""K-Means Clustering"""

kmeans = KMeans(n_clusters=3, init="k-means++", random_state=42)
y_pred = kmeans.fit_predict(X)

plt.scatter(X[y_pred == 0, 0], X[y_pred == 0, 1], c = "yellow", label = "Cluster 1")
plt.scatter(X[y_pred == 1, 0], X[y_pred == 1, 1], c = "green", label = "Cluster 2")
plt.scatter(X[y_pred == 2, 0], X[y_pred == 2, 1], c = "red", label = "Cluster 3")

plt.title("K-Means Clustering")
plt.xlabel("Quantity Ordered")
plt.ylabel("Sales")
plt.legend()
plt.show()